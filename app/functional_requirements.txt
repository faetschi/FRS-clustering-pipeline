The system must store and manage customer accounts, each identified by a unique customer number.
Each customer number must consist of a two-digit area code, followed by seven digits, and end with a one-digit checksum computed from the preceding digits.
The system must associate exactly one delivery address with each customer account.
The system must authenticate customers using a password during order placement or delivery confirmation.
The system must maintain a blacklist of customers and reject any order attempt from a blacklisted customer.
The system must maintain a catalog of simple products (e.g., croissant, orange juice) and prepackaged products (e.g., mini-breakfast).
Each product in the catalog must have a unique alphanumeric product code.
Each product must have a defined unit of measure (e.g., piece, 100 grams).
Each product must have a price per unit denominated in Euros.
A prepackaged product may include one or more simple products and/or other prepackaged products.
The system must allow unauthenticated users to browse the full product catalog.
The system must provide a browser-based product search function accessible without authentication.
The system must allow filtering products by numeric attributes such as price and calorie count.
When filtering by criteria (e.g., price < 4.00 EUR and calories < 300), the system must return all matching products.
Customers must be able to place orders through a web browser interface.
Customers must be able to place orders by sending an SMS to the company number 384 29 734 using the syntax: C <customerNumber> W <password> P <productCode> <quantity> [...].
An order must consist of one or more products, each specified by its product code and a positive integer quantity.
Customers must be able to create an order by directly selecting products from the catalog.
Customers must be able to create an order by selecting from a list of products filtered by specified criteria.
Customers must be able to create a new order by referencing a previous order as a blueprint.
An order may reference at most one previous order as a blueprint.
A previous order may serve as a blueprint for any number of new orders.
The system must assign a unique eight-digit order number with a trailing checksum digit to each successfully placed order.
The system must validate the customer number and password during web or SMS order placement and reject invalid credentials.
The system must reject any order attempt from a blacklisted customer.
The system must not allow orders that combine products from multiple customer accounts.
Customers must be able to cancel an order via the web interface by providing a valid order number and authenticating.
Customers must be able to cancel an order by sending an SMS to 384 29 734 with the syntax: O <orderNumber>.
The system must reject cancellation requests for orders that have been marked as packed by a packing clerk.
Once an order is canceled, the system must not allow it to be restored or reactivated.
The system must not support modification of existing orders; any change requires canceling the original order and placing a new one.
Customers must be able to inquire about the status of an order by providing its order number.
The system must return one of the following order statuses: "received", "packed", or "dispatched".
Packing clerks must be able to view all orders assigned to them that are in "received" status.
The system must generate a printable delivery label for each order containing: packing clerk name, customer first name, customer surname, delivery address, order number, and assigned delivery clerk name.
The system must generate a printable invoice for each order containing: all data from the delivery label, plus each ordered product’s code, description, quantity, unit price, line total, and the order’s grand total in Euros.
Each time an invoice is printed, the system must assign a unique, incrementing copy number to that printout.
Delivery clerks must be able to view all orders assigned to them that are in "packed" or "dispatched" status.
The system must compute a delivery itinerary that minimizes total travel time or distance for all orders assigned to a delivery clerk on a given trip.
The system must allow delivery clerks to print the computed delivery itinerary.
The system must present a browser-based delivery confirmation screen on a smartphone when an order is delivered.
Upon delivery, the customer must confirm receipt by entering their password in the browser-based confirmation screen.
The system must record a successful delivery confirmation only if the entered password matches the customer’s password.
When a packing clerk marks an order as packed, the system must generate a payment interface record for the external payment system.
Each payment interface record must contain: customer number, order number, total amount in Euros, and expected payment date (set to the current date).
The system must automatically generate a daily business report at midnight.
The daily business report must list every order from the previous calendar day, including: order number, customer name, customer address, each product with quantity and price, packing clerk name, and delivery clerk name.
The system must accept incoming SMS messages sent to the short code 384 29 734.
The system must parse incoming SMS messages and validate their syntax according to the defined order or cancellation formats.
Upon successful SMS order placement, the system must reply with an SMS containing the assigned order number.
Upon successful SMS cancellation, the system must reply with an SMS confirming the cancellation.
The system must support exactly four user roles: customer, packing clerk, delivery clerk, and manager.
The system must not include a phone clerk role.